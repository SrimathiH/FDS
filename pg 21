import pandas as pd
import numpy as np
from scipy.stats import t

# Sample data (replace this with your actual data)
data = {
    "product_category": ["Electronics", "Electronics", "Fashion", "Fashion", "Electronics", "Fashion"],
    "rating": [4.5, 4.8, 3.9, 4.2, 4.6, 4.0]
}

df = pd.DataFrame(data)

# Specify the product category for analysis
category_to_analyze = "Electronics"

# Filter data for the specific product category
category_data = df[df["product_category"] == category_to_analyze]

# Calculate the average rating for the product category
average_rating = category_data["rating"].mean()

# Calculate the confidence interval function
def confidence_interval(data, confidence=0.95):
sample_size = len(data)
std_error = data["rating"].std() / np.sqrt(sample_size)
degrees_of_freedom = sample_size - 1
t_value = t.ppf((1 + confidence) / 2, degrees_of_freedom)
margin_of_error = t_value * std_error
lower_bound = average_rating - margin_of_error
upper_bound = average_rating + margin_of_error
    return lower_bound, upper_bound

# Calculate the confidence interval for the specific product category
lower_bound, upper_bound = confidence_interval(category_data)

print(f"Average rating for {category_to_analyze}: {average_rating:.2f}")
print(f"Confidence Interval (95%): {lower_bound:.2f} to {upper_bound:.2f}")
